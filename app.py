from flask import Flask, request, jsonify
from flask_cors import CORS
import os
import swisseph as swe
import datetime

# Import local modules
from name_matcher import name_compatibility
from rashi_matcher import rashi_compatibility
from lagna_matcher import lagna_compatibility
from swisseph_utils import get_moon_rashi, get_lagna_sign

# ----------------------
# Initialize Flask App
# ----------------------
app = Flask(__name__)
CORS(app)

# Set Swiss Ephemeris path
swe.set_ephe_path("./ephe")  # change path if required


@app.route("/")
def home():
    env_type = "Render" if os.environ.get("RENDER") else "Localhost"
    return jsonify({
        "message": "Server is running",
        "environment": env_type,
        "url": "https://loveapi.onrender.com" if env_type == "Render" else f"http://{os.getenv('HOST','localhost')}:{os.getenv('PORT','5000')}"
    })


# ----------------------
# Helper: Description generator
# ----------------------
def get_description(name1, name2, compatibility_percent):
    if compatibility_percent >= 91:
          return (
              
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç "
            f"‡§ú‡•ã ‡§Ü‡§™‡§∏‡•Ä ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§ï‡§æ ‡§µ‡§æ‡§§‡§æ‡§µ‡§∞‡§£ ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à, ‡§ú‡§π‡§æ‡§Å ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§è‡§ï-‡§¶‡•Ç‡§∏‡§∞‡•á ‡§ï‡•á ‡§¶‡•É‡§∑‡•ç‡§ü‡§ø‡§ï‡•ã‡§£ "
            f"‡§ï‡•Ä ‡§∏‡§∞‡§æ‡§π‡§®‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ø‡§π ‡§∏‡§æ‡§Æ‡§Ç‡§ú‡§∏‡•ç‡§Ø ‡§ñ‡•Å‡§≤‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§ï‡•ã ‡§™‡•ç‡§∞‡•ã‡§§‡•ç‡§∏‡§æ‡§π‡§ø‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, "
            f"‡§ó‡§≤‡§§‡§´‡§π‡§Æ‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§ï‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§∏‡§Æ‡§ù‡•å‡§§‡•ã‡§Ç ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, "
            f"‡§ú‡§ø‡§∏‡§∏‡•á ‡§≠‡§æ‡§µ‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§î‡§∞ ‡§¶‡•Ä‡§∞‡•ç‡§ò‡§ï‡§æ‡§≤‡§ø‡§ï ‡§∏‡§π‡§Ø‡•ã‡§ó ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant connection that creates "
            f"an atmosphere of mutual respect, where both appreciate each other‚Äôs perspectives. "
            f"This harmony encourages open dialogue, reduces misunderstandings, and allows for "
            f"healthy compromises, fostering emotional security and long-term cooperation."
           
        )
    elif compatibility_percent >= 81:
        return (
            
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ "
            f"‡§ú‡§¨ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§¨‡§ø‡§®‡§æ ‡§ü‡§ï‡§∞‡§æ‡§µ ‡§ï‡•á ‡§Æ‡§§‡§≠‡•á‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§™‡§æ‡§ü‡§®‡§æ ‡§Ü‡§∏‡§æ‡§® ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ "
            f"‡§¶‡•ã‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§æ ‡§î‡§∞ ‡§∏‡§∞‡§æ‡§π‡§æ ‡§π‡•Å‡§Ü ‡§Æ‡§π‡§∏‡•Ç‡§∏ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§∏‡•á ‡§ó‡§π‡§∞‡•á ‡§∏‡§Ç‡§¨‡§Ç‡§ß, ‡§≠‡§æ‡§µ‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∏‡§æ‡§Æ‡§Ç‡§ú‡§∏‡•ç‡§Ø "
            f"‡§î‡§∞ ‡§∏‡§æ‡§ù‡§æ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§¨‡§®‡§§‡•á ‡§π‡•à‡§Ç‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant connection. "
            f"When ascendants align in a balanced way, it becomes easier to bridge differences without conflict. "
            f"Both feel understood and valued, leading to deeper bonds, emotional harmony, and shared goals."
           
        )
    elif compatibility_percent >= 71:
        return (
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç "
            f"‡§ú‡•ã ‡§∏‡•ç‡§µ‡§æ‡§≠‡§æ‡§µ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§π‡§Ø‡•ã‡§ó ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∏‡§æ‡§ù‡§æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡•ã‡§Ç ‡§§‡§•‡§æ ‡§∏‡§π‡§æ‡§®‡•Å‡§≠‡•Ç‡§§‡§ø ‡§ï‡•ã ‡§â‡§ú‡§æ‡§ó‡§∞ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ "
            f"‡§Ö‡§Ç‡§§‡§∞ ‡§ï‡•ã ‡§ß‡•à‡§∞‡•ç‡§Ø ‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§≤‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§Ö‡§∏‡§π‡§Æ‡§§‡§ø ‡§ï‡•ã ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•á ‡§Ö‡§µ‡§∏‡§∞ ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ "
            f"‡§∏‡§π‡§æ‡§Ø‡§ï, ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ ‡§∏‡•á ‡§≠‡§∞‡§æ ‡§Æ‡§æ‡§π‡•å‡§≤ ‡§¨‡§®‡§§‡§æ ‡§π‡•à‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant connection that naturally promotes cooperation "
            f"by highlighting shared values and empathy. Differences are handled with patience, turning disagreements "
            f"into opportunities for growth, and creating a supportive, trust-filled environment."
        )
    elif compatibility_percent >= 61:
        return (
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ "
            f"‡§Ø‡§π ‡§ê‡§∏‡•Ä ‡§ä‡§∞‡•ç‡§ú‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§Æ‡§ø‡§≤‡§® ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï-‡§¶‡•Ç‡§∏‡§∞‡•á ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§ï ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡§Ç, ‡§ú‡§ø‡§∏‡§∏‡•á ‡§∏‡§π‡§ú ‡§∏‡§Ç‡§µ‡§æ‡§¶ ‡§î‡§∞ ‡§∏‡§π‡§ú ‡§∏‡§Æ‡§ù ‡§¨‡§®‡§§‡•Ä ‡§π‡•à‡•§ "
            f"‡§¶‡•ã‡§®‡•ã‡§Ç ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§®, ‡§∏‡§Æ‡§ù‡•å‡§§‡§æ ‡§î‡§∞ ‡§≤‡§Ç‡§¨‡•á ‡§∏‡§Æ‡§Ø ‡§§‡§ï ‡§ö‡§≤‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§ï‡•ã ‡§™‡•ã‡§∑‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§∞‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant . "
            f"This symbolizes a meeting point of energies that complement each other, allowing smooth communication and intuitive understanding. "
            f"Both are willing to adapt, compromise, and nurture a lasting relationship."
        )
    elif compatibility_percent >= 51:
        return (
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ "
            f"‡§á‡§∏‡§ï‡•Ä ‡§§‡§æ‡§ï‡§§ ‡§∏‡§Æ‡§æ‡§®‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§π‡•à, ‡§§‡§æ‡§ï‡§ø ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§π‡§æ‡§µ‡•Ä ‡§® ‡§π‡•ã‡•§ "
            f"‡§Ü‡§™‡§∏‡•Ä ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§∏‡§π‡§Ø‡•ã‡§ó ‡§ï‡§æ ‡§Ü‡§ß‡§æ‡§∞ ‡§¨‡§®‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§∏‡•á ‡§∏‡§æ‡§ù‡§æ ‡§∏‡§´‡§≤‡§§‡§æ ‡§î‡§∞ ‡§∏‡§Ç‡§§‡•Å‡§∑‡•ç‡§ü‡§ø ‡§Æ‡§ø‡§≤‡§§‡•Ä ‡§π‡•à‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant . "
            f"The strength lies in maintaining equality, ensuring neither dominates. "
            f"Mutual respect becomes the foundation for productive collaboration, leading to shared success and fulfillment."
        )
    elif compatibility_percent >= 41:
        return (
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ "
            f"‡§è‡§ï ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§≠‡§æ‡§µ‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ, ‡§ñ‡•Å‡§≤‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§ ‡§î‡§∞ ‡§ü‡•Ä‡§Æ‡§µ‡§∞‡•ç‡§ï ‡§ï‡•Ä ‡§ú‡§ó‡§π ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à, "
            f"‡§ú‡§ø‡§∏‡§∏‡•á ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§®‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡•á‡§Ç‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant . "
            f"A well-balanced alignment creates space for emotional safety, open communication, and teamwork, "
            f"enabling both to face challenges together and grow."
        )
    else:
        return (
            f"{name1} ‡§î‡§∞ {name2} ‡§è‡§ï ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§≤‡§ó‡•ç‡§® ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ "
            f"‡§Ø‡§π ‡§∏‡§Ç‡§¨‡§Ç‡§ß ‡§∏‡§Æ‡§ù, ‡§ß‡•à‡§∞‡•ç‡§Ø ‡§î‡§∞ ‡§∏‡§æ‡§ù‡§æ ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø ‡§ï‡•ã ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§∏‡•á ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§Ü‡§™‡§∏‡•Ä ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§ï‡•á ‡§∏‡§æ‡§• "
            f"‡§∏‡§æ‡§Æ‡§Ç‡§ú‡§∏‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§§‡•á ‡§π‡•à‡§Ç‡•§\n\n"
            f"{name1} and {name2} share a balanced ascendant . "
            f"This connection weaves together understanding, patience, and shared purpose, "
            f"helping both grow in harmony while respecting each other‚Äôs uniqueness."
        )

# ----------------------
# üî§ NAME MATCH ENDPOINT
# ----------------------
@app.route("/name-match", methods=["POST"])
def name_match():
    data = request.get_json()
    if not data or "name1" not in data or "name2" not in data:
        return jsonify({"error": "Missing 'name1' or 'name2'"}), 400

    result = name_compatibility(data["name1"], data["name2"])
    compatibility_percent = result.get("compatibility_percent", 0)

    description = get_description(data["name1"], data["name2"], compatibility_percent)

    return jsonify({
        "name1": data["name1"],
        "name2": data["name2"],
        "compatibility_percent": compatibility_percent,
        "description": description
    })


# ----------------------
# ‚ôà RASHI MATCH ENDPOINT
# ----------------------
@app.route("/rashi-match", methods=["POST"])
def rashi_match():
    data = request.get_json()
    try:
        name1 = data["name1"]
        name2 = data["name2"]
        dob1 = datetime.datetime.fromisoformat(data["dob1"])
        dob2 = datetime.datetime.fromisoformat(data["dob2"])
        lat1, lon1 = float(data["lat1"]), float(data["lon1"])
        lat2, lon2 = float(data["lat2"]), float(data["lon2"])
    except Exception:
        return jsonify({"error": "Invalid or missing parameters"}), 400

    jd1 = swe.julday(dob1.year, dob1.month, dob1.day, dob1.hour + dob1.minute / 60)
    jd2 = swe.julday(dob2.year, dob2.month, dob2.day, dob2.hour + dob2.minute / 60)

    rashi1 = get_moon_rashi(jd1, lat1, lon1)
    rashi2 = get_moon_rashi(jd2, lat2, lon2)

    compatibility_percent, _ = rashi_compatibility(rashi1, rashi2)
    description = get_description(name1, name2, compatibility_percent)

    return jsonify({
        "name1": name1,
        "rashi1": rashi1,
        "name2": name2,
        "rashi2": rashi2,
        "compatibility_percent": compatibility_percent,
        "description": description
    })


# ----------------------
# ‚ôã LAGNA MATCH ENDPOINT
# ----------------------
@app.route("/lagna-match", methods=["POST"])
def lagna_match():
    data = request.get_json()
    try:
        name1 = data.get("name1", "Person A")
        name2 = data.get("name2", "Person B")
        dob1 = datetime.datetime.fromisoformat(data["dob1"])
        dob2 = datetime.datetime.fromisoformat(data["dob2"])
        lat1, lon1 = float(data["lat1"]), float(data["lon1"])
        lat2, lon2 = float(data["lat2"]), float(data["lon2"])
    except Exception:
        return jsonify({"error": "Invalid or missing parameters"}), 400

    jd1 = swe.julday(dob1.year, dob1.month, dob1.day, dob1.hour + dob1.minute / 60)
    jd2 = swe.julday(dob2.year, dob2.month, dob2.day, dob2.hour + dob2.minute / 60)

    lagna1 = get_lagna_sign(jd1, lat1, lon1)
    lagna2 = get_lagna_sign(jd2, lat2, lon2)

    compatibility_percent, _ = lagna_compatibility(lagna1, lagna2)
    description = get_description(name1, name2, compatibility_percent)

    return jsonify({
        "name1": name1,
        "lagna1": lagna1,
        "name2": name2,
        "lagna2": lagna2,
        "compatibility_percent": compatibility_percent,
        "description": description
    })


# ----------------------
# üöÄ Run the App
# ----------------------
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port, debug=True)